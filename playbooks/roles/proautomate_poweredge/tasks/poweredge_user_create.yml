---
- name: Import idrac ips   
  ansible.builtin.set_fact:
    array_ips: "{{idrac_config.idrac_ip}}"
  
- debug:
    msg: "{{array_ips}}"

# - name: Set the array ip
#   block:
#     - name: setting the array ip
#       ansible.builtin.set_fact:
#         array_ip: "{{item.ip}}"
#         user: "{{item.user}}"
#         password: "{{item.password}}"
#     # loop: "{{idrac}}"
#       when: item.ip is in array_ips

- name: Import user create configurations
  ansible.builtin.set_fact:
    user_configs: "{{ idrac_config.user.users }}"  

- name: Set base module configuration
  ansible.builtin.set_fact:
    idrac_base:
      idrac_ip: "{{ item.0.ip }}"
      validate_certs: "{{ verifycert }}"
      idrac_user: "{{ item.0.user }}"
      idrac_password: "{{ item.0.password }}"
      state: "present"
  when: item.0.ip is in item.1    
  with_together:  
    - "{{idrac}}" 
    - "{{array_ips}}"  
  

  
    
- debug:
    msg: 
    - "{{idrac_base.idrac_ip}}"
    - "{{idrac_base.idrac_user}}"
    - "{{idrac_base.idrac_password}}"


 # no_log: true

- name: Combine configurations
  ansible.builtin.set_fact:
    fs_items: "{{ (fs_items | default([])) + [ item | combine(idrac_base) ] }}"
  loop: "{{ user_configs }}"
 # no_log: true

- name: Create User for idrac
  dellemc.openmanage.idrac_user: "{{ item }}"
  loop: "{{ fs_items }}"
  register: user_create

- name: display
  ansible.builtin.debug:
    msg: "{{ user_create }}"
