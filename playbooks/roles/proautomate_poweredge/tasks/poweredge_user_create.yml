---
- name: Import idrac ips   
  ansible.builtin.set_fact:
    array_ips: "{{idrac_config.idrac_ip}}"
  
- debug:
    msg: "{{array_ips}}"

- name: setting up real ip
  set_fact:
    real_ip: "{{ real_ip }} + [ '{{ item.1.ip }}' ]"   
  when:
    item.0 in item.1.ip
  with_together:
    - "{{ array_ips }}"
    - "{{ idrac }}"
    
- name: printing requested idrac ip
  debug:
    var: real_ip
    
- name: running task for multiple idrac
  include_tasks: poweredge_user_create_old.yml
  vars:
    array_ips: "{{ item }}"
  loop: "{{ real_ip }}"

# - name: Import user create configurations
#   ansible.builtin.set_fact:
#     user_configs: "{{ idrac_config.user.users }}"  


# - name: Set base module configuration
#   ansible.builtin.set_fact:
#     idrac_base:
#       idrac_ip: "{{ item.ip }}"
#       validate_certs: "{{ verifycert }}"
#       idrac_user: "{{ item.user }}"
#       idrac_password: "{{ item.password }}"
#       state: "present"
#   loop: "{{idrac}}" 
#   when: item.ip is in array_ips  
  
# - debug:
#     msg: 
#     - "{{idrac_base.idrac_ip}}"
#     - "{{idrac_base.idrac_user}}"
#     - "{{idrac_base.idrac_password}}"

#  # no_log: true

# - name: Combine configurations
#   ansible.builtin.set_fact:
#     fs_items: "{{ (fs_items | default([])) + [ item | combine(idrac_base) ] }}"
#   loop: "{{ user_configs }}"
#  # no_log: true

# - name: Create User for idrac
#   dellemc.openmanage.idrac_user: 
#   loop: 
#   - "{{ user_configs }}"
#   register: user_create


# - name: display
#   ansible.builtin.debug:
#     msg: "{{ user_create }}"

