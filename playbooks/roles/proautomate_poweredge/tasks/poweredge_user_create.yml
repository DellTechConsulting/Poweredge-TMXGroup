---
- name: Import idrac ips   
  ansible.builtin.set_fact:
    array_ips: "{{idrac_config.idrac_ip}}"

- debug:
    msg: "{{array_ips}}"

- name: Combine configurations
  ansible.builtin.set_fact:
    array_ip: "{{ (array_ip | default([])) + [ item | combine(idrac.ip) ] }}"
    user: "{{ (array_ip | default([])) + [ item | combine(idrac.user) ] }}"
    password: "{{ (array_ip | default([])) + [ item | combine(idrac.password) ] }}"
  loop: "{{ array_ips }}"   

- debug:
    msg: 
    - "{{array_ip}}"
    - "{{user}}"
    - "{{passowrd}}"
    

    

# - name: Set the array ip
#   ansible.builtin.set_fact:
#     array_ip: "{{item.ip}}"
#     user: "{{item.user}}"
#     password: "{{item.password}}"
#   loop: "{{idrac}}"
#   when: item.ip == "{{idrac_config.idrac_ip}}"   
    
    
# - name: Import user create configurations
#   ansible.builtin.set_fact:
#     user_configs: "{{ idrac_config.user.users }}"

# - name: Set base module configuration
#   ansible.builtin.set_fact:
#     idrac_base:
#       idrac_ip: "{{ array_ip }}"
#       validate_certs: "{{ verifycert }}"
#       idrac_user: "{{ user }}"
#       idrac_password: "{{ password }}"
#       state: "present"
#  # no_log: true

# - name: Combine configurations
#   ansible.builtin.set_fact:
#     fs_items: "{{ (fs_items | default([])) + [ item | combine(idrac_base) ] }}"
#   loop: "{{ user_configs }}"
#  # no_log: true

# - name: Create User for idrac
#   dellemc.openmanage.idrac_user: "{{ item }}"
#   loop: "{{ fs_items }}"
#   register: user_create

# - name: display
#   ansible.builtin.debug:
#     msg: "{{ user_create }}"
